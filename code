/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode* temp1=list1;
        ListNode* temp2=list2;
        ListNode* extra=new ListNode(-1);
         ListNode* run=extra;
        while(temp1!=NULL&&temp2!=NULL)
        {
            if(temp1->val>temp2->val)
            {
               run->next=temp2;
                temp2=temp2->next;
 }
            else
            {
                run->next=temp1;
                temp1=temp1->next;
            }
            run=run->next;
        }
        while(temp1!=NULL)
        {
          run->next=temp1;
             temp1=temp1->next;
              run=run->next;
            
        }
        while(temp2!=NULL)
        {
            
            run->next=temp2;
             temp2=temp2->next;
              run=run->next;
}
       return extra->next;
      
    }
};
